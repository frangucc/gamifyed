if (device.desktop()) {
  window.Tapcentive = angular.module('Tapcentive', ['ngSanitize', 'ui.router', 'btford.socket-io', 'tap.controllers', 'tap.directives']);
} else {
  window.Tapcentive = angular.module("Tapcentive", ["ionic", "btford.socket-io", "tap.controllers", 'tap.directives']).run(function($ionicPlatform) {
    return $ionicPlatform.ready(function() {
      if (window.StatusBar) {
        return StatusBar.styleDefault();
      }
    });
  });
}

Tapcentive.config(function($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {
  $stateProvider.state('app', {
    url: '',
    abstract: true,
    controller: 'AppCtrl',
    templateUrl: 'menu.html'
  }).state('app.home', {
    url: '/',
    views: {
      menuContent: {
        controller: 'HomeCtrl',
        templateUrl: 'home.html'
      }
    }
  }).state('app.legal', {
    url: '/legal',
    views: {
      menuContent: {
        controller: 'LegalCtrl',
        templateUrl: 'legal.html'
      }
    }
  }).state('app.docs', {
    url: '/docs',
    views: {
      menuContent: {
        controller: 'DocsCtrl',
        templateUrl: 'docs/index.html'
      }
    }
  }).state('app.company', {
    url: '/company',
    views: {
      menuContent: {
        controller: 'CompanyCtrl',
        templateUrl: 'company.html'
      }
    }
  }).state('app.recycle', {
    url: '/recycle',
    views: {
      menuContent: {
        controller: 'RecycleCtrl',
        templateUrl: 'recycle.html'
      }
    }
  }).state('app.how', {
    url: '/how',
    views: {
      menuContent: {
        controller: 'HowCtrl',
        templateUrl: 'how.html'
      }
    }
  }).state('app.products', {
    url: '/products',
    views: {
      menuContent: {
        controller: 'ProductsCtrl',
        templateUrl: 'products.html'
      }
    }
  }).state('app.technology', {
    url: '/technology',
    views: {
      menuContent: {
        controller: 'TechnologyCtrl',
        templateUrl: 'technology.html'
      }
    }
  }).state('app.cbdextract', {
    url: '/cbd-extract',
    views: {
      menuContent: {
        controller: 'CbdCtrl',
        templateUrl: 'cbd-extract.html'
      }
    }
  }).state('app.news', {
    url: '/news',
    views: {
      menuContent: {
        controller: 'NewsCtrl',
        templateUrl: 'news.html'
      }
    }
  }).state('app.privacy', {
    url: '/privacy',
    views: {
      menuContent: {
        controller: 'PrivacyCtrl',
        templateUrl: 'privacy.html'
      }
    }
  }).state('app.press', {
    url: '/press',
    views: {
      menuContent: {
        controller: 'PressCtrl',
        templateUrl: 'press.html'
      }
    }
  }).state('app.contact', {
    url: '/contact',
    views: {
      menuContent: {
        controller: 'ContactCtrl',
        templateUrl: 'contact.html'
      }
    }
  }).state('app.doc', {
    url: '/docs/:permalink',
    views: {
      menuContent: {
        controller: 'DocCtrl',
        templateUrl: 'docs/show.html'
      }
    }
  }).state('app.step', {
    url: '/docs/:permalink/:step',
    views: {
      menuContent: {
        controller: 'DocCtrl',
        templateUrl: 'docs/show.html'
      }
    }
  });
  $urlRouterProvider.otherwise("/");
  return $httpProvider.interceptors.push(function() {
    return {
      request: function(config) {
        var type;
        if (config.url.match(/\.html$/) && !config.url.match(/^shared\//)) {
          if (device.tablet()) {
            type = 'tablet';
          } else if (device.mobile()) {
            type = 'mobile';
          } else {
            type = 'desktop';
          }
          config.url = "/" + type + "/" + config.url;
        }
        return config;
      }
    };
  });
});

Tapcentive.run(function($state) {
  return $state.go('app.home');
});

Tapcentive.run(function($rootScope, copy) {
  return $rootScope.copy = copy;
});

Tapcentive.factory('Socket', function(socketFactory) {
  return socketFactory();
});

Tapcentive.factory('Docs', function(Socket) {
  var service;
  service = {
    list: [],
    find: function(permalink) {
      return _.find(service.list, function(doc) {
        return doc.permalink === permalink;
      });
    }
  };
  Socket.on('docs', function(docs) {
    return service.list = docs;
  });
  return service;
});

Tapcentive.controller('HomeCtrl', function($scope) {});

Tapcentive.controller('LegalCtrl', function($scope) {});

Tapcentive.controller('CompanyCtrl', function($scope) {});

Tapcentive.controller('AppCtrl', function($scope) {});

Tapcentive.controller('RecycleCtrl', function($scope) {});

Tapcentive.controller('NewsCtrl', function($scope) {});

Tapcentive.controller('CbdCtrl', function($scope) {});

Tapcentive.controller('PressCtrl', function($scope) {});

Tapcentive.controller('PrivacyCtrl', function($scope) {});

Tapcentive.controller('Technology', function($scope) {});

Tapcentive.controller('ContactCtrl', function($scope) {});

Tapcentive.controller('GetStartedCtrl', function($scope) {});

Tapcentive.controller('DevelopersCtrl', function($scope) {});

Tapcentive.controller('DeveloperCenterCtrl', function($scope) {});

Tapcentive.controller('DocsCtrl', function($scope, Docs) {
  return $scope.$watch((function() {
    return Docs.list;
  }), function() {
    return $scope.docs = Docs.list;
  });
});

Tapcentive.controller('DocCtrl', function($scope, $sce, $stateParams, $timeout, Docs) {
  $scope.index = $stateParams.step ? $stateParams.step - 1 : 0;
  $scope.$watch((function() {
    return Docs.list;
  }), function() {
    $scope.doc = Docs.find($stateParams.permalink);
    if ($scope.doc) {
      $scope.step = $scope.doc.steps[$scope.index];
      $scope.step.url = $sce.trustAsResourceUrl($scope.step.url);
      if ($scope.step.type === 'dialog') {
        $scope.messageIndex = 0;
        $scope.messages = [];
        return $timeout($scope.nextMessage, 1000);
      }
    }
  });
  return $scope.hasMoreSteps = function() {
    if ($scope.step) {
      return $scope.step.index < $scope.doc.steps.length;
    }
  };
});

angular.module("tap.controllers", []);

angular.module("tap.directives", []).directive("device", function() {
  return {
    restrict: "A",
    link: function() {
      return device.init();
    }
  };
}).directive("snapscroll", function() {
  return {
    restrict: "A",
    link: function() {
      return device.init();
    }
  };
}).service('copy', function($sce) {
  var copy, trustValues;
  copy = {
    about: {
      heading: "We manufacture the most advanced CBD vapor product available",
      sub_heading: "Manufactured in the United States, the Digital Vaporizor by CBD Technologies is the first to employ state-of-the-art mechanical design.",
      copy: "<p>At CBD Technologies, we focus on the intersection of the highest quality, hand-crafted extract products and the best possible delivery technologies to ensure the experience for our customers is second-to-none.  <br /><br />By utilizing advanced, USA-manufactured vaporizer products, the highest quality CBD-rich Hempstalk oil extracts, and blending all of our e-liquids in a certified GMP facility without the use of Propylene Glycol or other chemicals, the Alcura line of products are not only innovative and effective, but are the safest CBD-rich Hempstalk products available.  We back up every batch of our proprietary e-liquid blends will full testing profiles and maintain the strictest quality control for both our technologies and extracts, guaranteeing a consistent experience every time.  By infusing our e-liquids with just a hint of our all-natural, organic essential oil blends, the entire Alcura product line not only delivers the benefits of CBD-rich Hempstalk extract, but a range of products to fit our customers lifestyles.  <br /><br />From our calming Night lend to our energizing Day blend, the entire Alcura line is designed to delivery maximum care, flavor, and effectiveness. </p>"
    },
    team: {
      heading: "",
      bios: {
        dave_role: "",
        dave_copy: ""
      }
    }
  };
  trustValues = function(values) {
    return _.each(values, function(val, key) {
      switch (typeof val) {
        case 'string':
          return $sce.trustAsHtml(val);
        case 'object':
          return trustValues(val);
      }
    });
  };
  trustValues(copy);
  return copy;
});

var $, cssId, head, link;

if (device.desktop()) {

} else if (device.mobile()) {
  $ = document;
  cssId = 'myCss';
  if (!$.getElementById(cssId)) {
    head = $.getElementsByTagName('head')[0];
    link = $.createElement('link');
    link.id = cssId;
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = '/css/ionic.css';
    link.media = 'all';
    head.appendChild(link);
  }
}

//# sourceMappingURL=data:application/json;base64,